name: Cross - Build and Test

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4  # 更新到 v4

      - name: Set up CMake
        uses: lukka/run-cmake@v3  # 替换为兼容的最新版本
        with:
          buildDirectory: '${{ github.workspace }}/build'
          cmakeListsTxtPath: '${{ github.workspace }}/crossbuild/CMakeLists.txt'

      - name: Build
        run: cmake --build build --config Release

      - name: Run executable and capture output
        id: run
        shell: bash
        run: |
          # 确定可执行文件路径
          if [[ "${{ matrix.os }}" == "windows-latest" ]]; then
            EXECUTABLE="./build/crossbuild.exe"
          else
            EXECUTABLE="./build/crossbuild"
          fi
          
          # 执行并捕获输出
          if [ -f "$EXECUTABLE" ]; then
            "$EXECUTABLE" > output.txt 2>&1
            echo "exit_code=0" >> $GITHUB_ENV
          else
            echo "Executable not found!" > output.txt
            echo "exit_code=1" >> $GITHUB_ENV
          fi

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4  # 更新到 v4
        with:
          name: crossbuild-${{ matrix.os }}
          path: |
            build/crossbuild
            build/crossbuild.exe
            output.txt
          retention-days: 7

      - name: Fail if execution failed
        if: env.exit_code != '0'
        run: exit ${{ env.exit_code }}